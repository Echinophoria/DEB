library(DEB)
path <- system.file('inst/results_Odontaster_validus.mat', package='DEB')
path
library(DEB)
a =(data("parameters_Mytilus_edulis"))
system.file(package=DEB)
system.file(package='DEB')
path <- system.file(package='DEB')
name <- file.path(path, 'results_Odontaster_validus.mat')
pars <- get_DEB_pars(name)
library(DEB)
library(DEB)
library(DEB)
library(DEB)
system.file('data_examples_templates', package='DEB' )
pars <- get_DEB_pars(system.file('data_examples_templates/results_Odontaster_validus.mat', package='DEB' )
)
data(system.file('data_examples_templates/parameters_template.csv', package='DEB'))
system.file('data_examples_templates/parameters_template.csv', package='DEB')
pars <- get_DEB_pars(system.file('data_examples_templates/parameters_Mytilus_edulis.csv', package='DEB'))
data("elemental_composition")
# adding chemical and elemental parameters (they can be modified on system file)
data("elemental_composition")
chems = as.list(elemental_composition[,1:2])
library(DEB)
pars <- get_DEB_pars(system.file('data_examples_templates/parameters_Mytilus_edulis.csv', package='DEB'))
View(pars)
pars <- get_DEB_pars(system.file('data_examples_templates/results_Odontaster_validus.mat', package='DEB'))
f <- 1
ltr <- get_tj(pars, f)
library(DEB)
library(DEB)
pars <- get_DEB_pars(system.file('data_examples_templates/results_Odontaster_validus.mat', package='DEB'))
f <- 1
ltr <- get_tj(pars, f)
library(DEB)
pars <- get_DEB_pars(system.file('data_examples_templates/results_Odontaster_validus.mat', package='DEB'))
f <- 1
ltr <- get_tj(pars, f)
p <- get_DEB_pars(system.file('data_examples_templates/results_Odontaster_validus.mat', package='DEB'))
f = 1
ltR <- get_tj(p, f)  # this function already makes uses of dget_l_ISO
vH = c(p$v_Hj, p$v_Hp) # growth from metamorphosis to puberty
parms = c(p$k, p$g, f, ltR$s_M)
l = ode(ltR$lj, vH, dget_l_ISO, parms, method='ode45')
lp =l[2,2]
p <- get_DEB_pars(system.file('data_examples_templates/results_Odontaster_validus.mat', package='DEB'))
f = 1
ltR <- get_tj(p, f)  # this function already makes uses of dget_l_ISO
vH = c(p$v_Hj, p$v_Hp) # growth from metamorphosis to puberty
parms = c(p$k, p$g, f, ltR$s_M)
require(deSolve)
l = ode(ltR$lj, vH, dget_l_ISO, parms, method='ode45')
lp =l[2,2]
p <- get_DEB_pars(system.file('data_examples_templates/results_Odontaster_validus.mat', package='DEB'))
e<-1
U_E0 <- get_uE0(p, e)   # d.cm^2, initial scaled reserve
Wd_0 <- 1e6 * U_E0 * p$p_Am * p$w_E / p$mu_E   # ug, initial (=egg) dry weight
library(DEB)
source('~/Documents/R-packages/DEB/R/get_food.R')
p <- get_DEB_pars(system.file('data_examples_templates/parameters_Mytilus_edulis.csv', package='DEB'))
p$J_Xpoc_Fm <- 4.8e-04 # C-mol/d.cm2, maximum retention rate for substrate POC
p$rho_Xpoc  <- 0.99  # -, probability of binding of substrate POC.
p$J_Xpoc_Im <- 1.4e-04 # C-mol/d.cm2, maximum ingestion rate
Xi= 2.06e-05  # C-mol/l, available food
f <- get_food(p, Xi)
sources <- length(Xi)  # determining the number of food sources
# obtaining J_Xi_Fm from p
J_Xi_Fm <- p[which(grepl('_Fm', names(p), fixed=TRUE),  arr.ind = TRUE)]
names <- names(J_Xi_Fm)
for (i in 1:length(names)){
a <- names[[i]]
names[[i]] <- o
}
names
install.packages("stringr")
gsub(".*X (.+ _Fm.*", "\\1", names)
gsub(".*X (.+) _Fm.*", "\\1", names)
gsub(".*X(.+)_Fm.*", "\\1", names)
source('~/Documents/R-packages/DEB/R/get_food.R')
# obtaining J_Xi_Fm from p
J_Xi_Fm <- p[which(grepl('_Fm', names(p), fixed=TRUE),  arr.ind = TRUE)]
nm <- names(J_Xi_Fm)
for (i in 1:length(names)){
a <- nm[[i]]
nm[[i]] <- gsub(".*X(.+)_Fm.*", "\\1", names)
}
J_Xi_Fm <- as.numeric(unlist(list(J_Xi_Fm[sort(names(J_Xi_Fm))])))
Cr <- p$F_m / (1+ sum(Xi * p$F_m / J_Xi_Fm))  #
J_Xi_F = c()   # store retention of each type of food
for (i in 1:sources){
J_Xi_F[i] <- Xi[i]*Cr
}
# obtaining J_Xi_lm from p
J_Xi_Im <- p[which(grepl('_Im', names(p), fixed=TRUE),  arr.ind = TRUE)]
J_Xi_Im <- as.numeric(unlist(list(J_Xi_Im[sort(names(J_Xi_Im))])))
# obtaining rho_Xi from p
rho_Xi <- p[which(grepl('rho_', names(p), fixed=TRUE),  arr.ind = TRUE)]
rho_Xi <- as.numeric(unlist(list(rho_Xi[sort(names(rho_Xi))])))
J_Xi_I <- c()   # surface area-specific ingestion
J_Xi_P <- c()   # surface area-specific pseudofaeces production
for (i in 1:sources){
J_Xi_I[i] <- rho_Xi[i]*J_Xi_F[i]/(1+sum((rho_Xi*J_Xi_F)/J_Xi_Im))
J_Xi_P[i] <- J_Xi_F[i]- J_Xi_I[i]
}
# listing and name parameters
J_Xi_F <- as.list(J_Xi_F)
J_Xi_I <- as.list(J_Xi_I)
J_Xi_P <- as.list(J_Xi_P)
names(J_Xi_F) <- paste(nm,'_F', sep ='')  # clearance rates by food type.
names(J_Xi_I) <- paste(nm,'_I', sep ='')  # Ingestion rates by food type.
names(J_Xi_P) <- paste(nm,'_P', sep ='')  # Egestion rates by food type.
names(J_Xi_F) <- paste('J_X',nm,'_F', sep ='')  # clearance rates by food type.
names(J_Xi_I) <- paste('J_X',nm,'_I', sep ='')  # Ingestion rates by food type.
names(J_Xi_P) <- paste('J_X',nm,'_P', sep ='')  # Egestion rates by food type.
source('~/Documents/R-packages/DEB/R/get_food.R')
p <- get_DEB_pars(system.file('data_examples_templates/parameters_Mytilus_edulis.csv', package='DEB'))
p$J_Xpoc_Fm <- 4.8e-04 # C-mol/d.cm2, maximum retention rate for substrate POC
p$rho_Xpoc  <- 0.99  # -, probability of binding of substrate POC.
p$J_Xpoc_Im <- 1.4e-04 # C-mol/d.cm2, maximum ingestion rate
Xi= 2.06e-05  # C-mol/l, available food
f <- get_food(p, Xi)
library(usethis)
devtools
library(devtools)
install_github("hadley/dplyr")
library(devtools)
install_github("hadley/dplyr")
roxygen2::update_collate()
roxygen2::update_collate(base_path = getwd() )
getwd
getwd()
roxygen2::update_collate("/Users/ulmo/Documents/R-packages/DEB" )
loaded_packages('DEB')
roxygen2::roxygenise(package.dir=getwd())
roxygen2::roxygenise(package.dir=getwd(), load_code ='source')
devtools::install_github('Echinophoria/DEB')
p <- get_DEB_pars(system.file('data_examples_templates/parameters_Mytilus_edulis.csv', package='DEB'))
p$J_Xpoc_Fm <- 4.8e-04 # C-mol/d.cm2, maximum retention rate for substrate POC
p$rho_Xpoc  <- 0.99  # -, probability of binding of substrate POC.
p$J_Xpoc_Im <- 1.4e-04 # C-mol/d.cm2, maximum ingestion rate
library(DEB)
p <- get_DEB_pars(system.file('data_examples_templates/parameters_Mytilus_edulis.csv', package='DEB'))
p$J_Xpoc_Fm <- 4.8e-04 # C-mol/d.cm2, maximum retention rate for substrate POC
p$rho_Xpoc  <- 0.99  # -, probability of binding of substrate POC.
p$J_Xpoc_Im <- 1.4e-04 # C-mol/d.cm2, maximum ingestion rate
Xi= 2.06e-05  # C-mol/l, available food
J_Xi <- get_food(p, Xi)
sources <- length(Xi)  # determining the number of food sources
# obtaining J_Xi_Fm from p
J_Xi_Fm <- p[which(grepl('_Fm', names(p), fixed=TRUE),  arr.ind = TRUE)]
nm <- names(J_Xi_Fm)
for (i in 1:length(names)){
a <- nm[[i]]
nm[[i]] <- gsub(".*X(.+)_Fm.*", "\\1", names)
}
for (i in 1:length(names)){
a <- nm[[i]]
nm[[i]] <- gsub(".*X(.+)_Fm.*", "\\1", nm)
}
library(DEB)
library(DEB)
